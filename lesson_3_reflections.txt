When would you want to use a remote repository rather than keeping all your work local?

  When you are collaborating with other team members

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

	Because the code pushed to GitHub might be from other collaborators that you would 
	want to check before pulling into local repository

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	fork: Is a clone that takes place on GitHub servers
	clone: Is when you copy a repository from GitHub to a local repository, or
		   from a local repository to another local repository.
	branch: Is when you create a copy of the repository and give it a name tag, so that
			you have changes performed on this copy, and not any other.

What is the benefit of having a copy of the last known state of the remote stored locally?

	You can check this repository offline, and merge it with local repository

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	
	Without git and GitHub, collaboration would be through sending code via email.
	The easier thing would be that there will no be a need for memorizing git commands and adding commit comments.
	The hardewr would be keeping track of changes, reverting to history, and resolving conflicts. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	You would want to make changes to a separate branch when you want to test out some new feature, or attempt to fix a bug
	The benefits is that you can share this new branch with a pull request on GitHub and have others look at it, and comment
	before commiting it to the master, while keeping a working master version